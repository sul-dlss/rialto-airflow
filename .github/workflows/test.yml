name: Test
on:
  - push
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Lint
        uses: astral-sh/ruff-action@v3
        with:
          args: 'check'

      - name: Format
        uses: astral-sh/ruff-action@v3
        with:
          # if files would be reformatted: print the diff between the current file and
          # the re-formatted file, then exit with non-zero status code (which should fail the build step)
          args: 'format --diff'

      - name: Install uv
        run: pip3 install uv

      - name: Bring up postgres container
        run: docker compose -f compose.yaml up -d --wait postgres

      - name: Create the databases that persist between runs
        # the history command at the end is there as a debuggging aid if needed -- it has no side-effects.
        # migration history doesn't persist between CI runs, but it's still helpful to see which migrations were
        # applied on this run.
        run: |
          uv run python bin/create_databases.py
          uv run alembic upgrade head
          uv run alembic history --verbose
        env:
          AIRFLOW_VAR_RIALTO_POSTGRES: "postgresql+psycopg2://airflow:airflow@localhost"

      - name: Run type checking
        run: uv run mypy .

      - name: Run tests
        run: uv run pytest --cov-branch --cov-report=xml
        env:
          SQLALCHEMY_SILENCE_UBER_WARNING: 1
          SQLALCHEMY_WARN_20: 1
          AIRFLOW_VAR_DIMENSIONS_API_KEY: ${{ secrets.AIRFLOW_VAR_DIMENSIONS_API_KEY }}
          AIRFLOW_VAR_WOS_KEY: ${{ secrets.AIRFLOW_VAR_WOS_KEY }}
          AIRFLOW_VAR_PUBMED_KEY: ${{ secrets.AIRFLOW_VAR_PUBMED_KEY }}
          AIRFLOW_VAR_MAIS_TOKEN_URL: ${{ secrets.AIRFLOW_VAR_MAIS_TOKEN_URL }}
          AIRFLOW_VAR_MAIS_BASE_URL: ${{ secrets.AIRFLOW_VAR_MAIS_BASE_URL }}
          AIRFLOW_VAR_MAIS_CLIENT_ID: ${{ secrets.AIRFLOW_VAR_MAIS_CLIENT_ID }}
          AIRFLOW_VAR_MAIS_SECRET: ${{ secrets.AIRFLOW_VAR_MAIS_SECRET }}
          AIRFLOW_VAR_RIALTO_POSTGRES: "postgresql+psycopg2://airflow:airflow@localhost"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: sul-dlss/rialto-airflow
